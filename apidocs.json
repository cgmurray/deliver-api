{
    "openapi": "3.0.2",
    "info": {
        "title": "",
        "version": "0.0.0"
    },
    "paths": {
        "/api/availability_hours": {
            "get": {
                "tags": [
                    "AvailabilityHours"
                ],
                "operationId": "getAvailabilityHoursCollection",
                "summary": "Retrieves the collection of AvailabilityHours resources.",
                "responses": {
                    "200": {
                        "description": "AvailabilityHours collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AvailabilityHours.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AvailabilityHours"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AvailabilityHours"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "AvailabilityHours"
                ],
                "operationId": "postAvailabilityHoursCollection",
                "summary": "Creates a AvailabilityHours resource.",
                "responses": {
                    "201": {
                        "description": "AvailabilityHours resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailabilityHours.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailabilityHours"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailabilityHours"
                                }
                            }
                        },
                        "links": {
                            "GetAvailabilityHoursItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getAvailabilityHoursItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/availability_hours/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AvailabilityHours.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AvailabilityHours"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/AvailabilityHours"
                            }
                        }
                    },
                    "description": "The new AvailabilityHours resource"
                }
            }
        },
        "/api/availability_hours/{id}": {
            "get": {
                "tags": [
                    "AvailabilityHours"
                ],
                "operationId": "getAvailabilityHoursItem",
                "summary": "Retrieves a AvailabilityHours resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AvailabilityHours resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailabilityHours.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailabilityHours"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailabilityHours"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "AvailabilityHours"
                ],
                "operationId": "deleteAvailabilityHoursItem",
                "summary": "Removes the AvailabilityHours resource.",
                "responses": {
                    "204": {
                        "description": "AvailabilityHours resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "put": {
                "tags": [
                    "AvailabilityHours"
                ],
                "operationId": "putAvailabilityHoursItem",
                "summary": "Replaces the AvailabilityHours resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AvailabilityHours resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailabilityHours.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailabilityHours"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailabilityHours"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AvailabilityHours.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AvailabilityHours"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/AvailabilityHours"
                            }
                        }
                    },
                    "description": "The updated AvailabilityHours resource"
                }
            },
            "patch": {
                "tags": [
                    "AvailabilityHours"
                ],
                "operationId": "patchAvailabilityHoursItem",
                "summary": "Updates the AvailabilityHours resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AvailabilityHours resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailabilityHours.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailabilityHours"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailabilityHours"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AvailabilityHours"
                            }
                        }
                    },
                    "description": "The updated AvailabilityHours resource"
                }
            }
        },
        "/api/banners": {
            "get": {
                "tags": [
                    "Banner"
                ],
                "operationId": "getBannerCollection",
                "summary": "Retrieves the collection of Banner resources.",
                "responses": {
                    "200": {
                        "description": "Banner collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Banner.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Banner"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Banner"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "Banner"
                ],
                "operationId": "postBannerCollection",
                "summary": "Creates a Banner resource.",
                "responses": {
                    "201": {
                        "description": "Banner resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Banner.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Banner"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Banner"
                                }
                            }
                        },
                        "links": {
                            "GetBannerItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getBannerItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/banners/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Banner.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Banner"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Banner"
                            }
                        }
                    },
                    "description": "The new Banner resource"
                }
            }
        },
        "/api/banners/{id}": {
            "get": {
                "tags": [
                    "Banner"
                ],
                "operationId": "getBannerItem",
                "summary": "Retrieves a Banner resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Banner resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Banner.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Banner"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Banner"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Banner"
                ],
                "operationId": "deleteBannerItem",
                "summary": "Removes the Banner resource.",
                "responses": {
                    "204": {
                        "description": "Banner resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "put": {
                "tags": [
                    "Banner"
                ],
                "operationId": "putBannerItem",
                "summary": "Replaces the Banner resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Banner resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Banner.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Banner"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Banner"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Banner.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Banner"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Banner"
                            }
                        }
                    },
                    "description": "The updated Banner resource"
                }
            },
            "patch": {
                "tags": [
                    "Banner"
                ],
                "operationId": "patchBannerItem",
                "summary": "Updates the Banner resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Banner resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Banner.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Banner"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Banner"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Banner"
                            }
                        }
                    },
                    "description": "The updated Banner resource"
                }
            }
        },
        "/api/customers": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "operationId": "getCustomerCollection",
                "summary": "Retrieves the collection of Customer resources.",
                "responses": {
                    "200": {
                        "description": "Customer collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Customer.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Customer"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Customer"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "Customer"
                ],
                "operationId": "postCustomerCollection",
                "summary": "Creates a Customer resource.",
                "responses": {
                    "201": {
                        "description": "Customer resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        },
                        "links": {
                            "GetCustomerItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getCustomerItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/customers/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    },
                    "description": "The new Customer resource"
                }
            }
        },
        "/api/customers/{id}": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "operationId": "getCustomerItem",
                "summary": "Retrieves a Customer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Customer"
                ],
                "operationId": "deleteCustomerItem",
                "summary": "Removes the Customer resource.",
                "responses": {
                    "204": {
                        "description": "Customer resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "put": {
                "tags": [
                    "Customer"
                ],
                "operationId": "putCustomerItem",
                "summary": "Replaces the Customer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    },
                    "description": "The updated Customer resource"
                }
            },
            "patch": {
                "tags": [
                    "Customer"
                ],
                "operationId": "patchCustomerItem",
                "summary": "Updates the Customer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    },
                    "description": "The updated Customer resource"
                }
            }
        },
        "/api/foos": {
            "get": {
                "tags": [
                    "Foo"
                ],
                "operationId": "getFooCollection",
                "summary": "Retrieves the collection of Foo resources.",
                "responses": {
                    "200": {
                        "description": "Foo collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Foo.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Foo"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Foo"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "Foo"
                ],
                "operationId": "postFooCollection",
                "summary": "Creates a Foo resource.",
                "responses": {
                    "201": {
                        "description": "Foo resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Foo.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Foo"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Foo"
                                }
                            }
                        },
                        "links": {
                            "GetFooItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getFooItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/foos/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Foo.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Foo"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Foo"
                            }
                        }
                    },
                    "description": "The new Foo resource"
                }
            }
        },
        "/api/foos/{id}": {
            "get": {
                "tags": [
                    "Foo"
                ],
                "operationId": "getFooItem",
                "summary": "Retrieves a Foo resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Foo resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Foo.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Foo"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Foo"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Foo"
                ],
                "operationId": "deleteFooItem",
                "summary": "Removes the Foo resource.",
                "responses": {
                    "204": {
                        "description": "Foo resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "put": {
                "tags": [
                    "Foo"
                ],
                "operationId": "putFooItem",
                "summary": "Replaces the Foo resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Foo resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Foo.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Foo"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Foo"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Foo.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Foo"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Foo"
                            }
                        }
                    },
                    "description": "The updated Foo resource"
                }
            },
            "patch": {
                "tags": [
                    "Foo"
                ],
                "operationId": "patchFooItem",
                "summary": "Updates the Foo resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Foo resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Foo.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Foo"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Foo"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Foo"
                            }
                        }
                    },
                    "description": "The updated Foo resource"
                }
            }
        },
        "/api/polygons": {
            "get": {
                "tags": [
                    "Polygon"
                ],
                "operationId": "getPolygonCollection",
                "summary": "Retrieves the collection of Polygon resources.",
                "responses": {
                    "200": {
                        "description": "Polygon collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Polygon.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Polygon"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Polygon"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "Polygon"
                ],
                "operationId": "postPolygonCollection",
                "summary": "Creates a Polygon resource.",
                "responses": {
                    "201": {
                        "description": "Polygon resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Polygon.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Polygon"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Polygon"
                                }
                            }
                        },
                        "links": {
                            "GetPolygonItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getPolygonItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/polygons/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Polygon.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Polygon"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Polygon"
                            }
                        }
                    },
                    "description": "The new Polygon resource"
                }
            }
        },
        "/api/polygons/{id}": {
            "get": {
                "tags": [
                    "Polygon"
                ],
                "operationId": "getPolygonItem",
                "summary": "Retrieves a Polygon resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Polygon resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Polygon.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Polygon"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Polygon"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Polygon"
                ],
                "operationId": "deletePolygonItem",
                "summary": "Removes the Polygon resource.",
                "responses": {
                    "204": {
                        "description": "Polygon resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "put": {
                "tags": [
                    "Polygon"
                ],
                "operationId": "putPolygonItem",
                "summary": "Replaces the Polygon resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Polygon resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Polygon.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Polygon"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Polygon"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Polygon.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Polygon"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Polygon"
                            }
                        }
                    },
                    "description": "The updated Polygon resource"
                }
            },
            "patch": {
                "tags": [
                    "Polygon"
                ],
                "operationId": "patchPolygonItem",
                "summary": "Updates the Polygon resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Polygon resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Polygon.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Polygon"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Polygon"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Polygon"
                            }
                        }
                    },
                    "description": "The updated Polygon resource"
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AvailabilityHours": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "day_of_week": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "open_at": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "close_at": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "banner": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "dayOfWeek": {
                        "type": "integer"
                    },
                    "openAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "closeAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AvailabilityHours.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "day_of_week": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "open_at": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "close_at": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "banner": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "dayOfWeek": {
                        "type": "integer"
                    },
                    "openAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "closeAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Banner": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "polygons": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "availabilitiesHours": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    }
                }
            },
            "Banner.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "polygons": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "availabilitiesHours": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    }
                }
            },
            "Customer": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "service_area_radius_feet": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "coordinates": {
                        "type": "string",
                        "nullable": true
                    },
                    "serviceAreaRadiusFeet": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "Customer.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "service_area_radius_feet": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "coordinates": {
                        "type": "string",
                        "nullable": true
                    },
                    "serviceAreaRadiusFeet": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "Foo": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "somename": {
                        "type": "string"
                    }
                }
            },
            "Foo.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "somename": {
                        "type": "string"
                    }
                }
            },
            "Polygon": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "polygon_coordinates": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "banner": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "polygonCoordinates": {
                        "type": "string"
                    }
                }
            },
            "Polygon.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "polygon_coordinates": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "banner": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "polygonCoordinates": {
                        "type": "string"
                    }
                }
            }
        }
    }
}
